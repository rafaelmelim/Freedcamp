/*
  # Add time tracking feature

  1. New Tables
    - `time_entries`
      - `id` (bigint, primary key)
      - `task_id` (bigint, foreign key to tasks)
      - `start_time` (timestamptz)
      - `end_time` (timestamptz)
      - `duration` (integer, in seconds)
      - `created_at` (timestamptz)

  2. Security
    - Enable RLS on `time_entries` table
    - Add policies for authenticated users to manage their time entries
*/

CREATE TABLE IF NOT EXISTS time_entries (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  task_id bigint REFERENCES tasks(id) ON DELETE CASCADE,
  start_time timestamptz NOT NULL,
  end_time timestamptz NOT NULL,
  duration integer NOT NULL,
  created_at timestamptz DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE time_entries ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Users can manage time entries for their tasks"
  ON time_entries
  USING (
    task_id IN (
      SELECT tasks.id
      FROM tasks
      JOIN projects ON tasks.project_id = projects.id
      WHERE projects.owner_id = auth.uid()
    )
  )
  WITH CHECK (
    task_id IN (
      SELECT tasks.id
      FROM tasks
      JOIN projects ON tasks.project_id = projects.id
      WHERE projects.owner_id = auth.uid()
    )
  );